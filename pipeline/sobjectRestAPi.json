{
	"name": "sobjectRestAPi",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@concat('Bearer ' ,pipeline().parameters.pAccessToken)",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "dsSibjectRestApi",
						"type": "DatasetReference",
						"parameters": {
							"pVerb": {
								"value": "@pipeline().parameters.pVerb",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Json1",
						"type": "DatasetReference",
						"parameters": {
							"pFilename": {
								"value": "@concat(replace(pipeline().parameters.pVerb,'/','_') ,'raw.json')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "execute Flatten Json Data flow",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "dfParseJsonSobject",
						"type": "DataFlowReference",
						"parameters": {
							"outFile": {
								"value": "'@{replace(pipeline().parameters.pVerb,'/','_') }'",
								"type": "Expression"
							},
							"pFilename": {
								"value": "'@{pipeline().parameters.outFile}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"source1": {
								"pFilename": {
									"value": "@pipeline().parameters.pFilename",
									"type": "Expression"
								}
							},
							"sink1": {
								"outFile": {
									"value": "@concat(pipeline().parameters.outFile,'.csv')",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"outFile": {
				"type": "string",
				"defaultValue": "out.csv"
			},
			"pFilename": {
				"type": "string",
				"defaultValue": "Sobject.json"
			},
			"pVerb": {
				"type": "string",
				"defaultValue": "Account/describe"
			},
			"pAccessToken": {
				"type": "string",
				"defaultValue": "00D5w0000050TSI!AQQAQCoe8Pi4XezqXgOjWctoKfGNE.EE_xy9yxorQwsJscazgyON0DiJHtpCzvLiySzUDvHldMRH_w40fk6tmfLMn8zH725s"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-01-22T12:05:38Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}